using System;
using System.Collections.Generic;
using Newtonsoft.Json;

// Generated by CS_ClassTemplate.dlq for {{schema.Title}}
namespace {{schema.Title | Namespace}}.Model
{
  public partial class {{schema.Title | ClassName }} 
  	{{ schema | BaseClassFullName :'Model' | PreppendIfNotEmpty:': '}}
  {
    public static string CypherCreate {get; protected set;} = 
{% MultilineStringEscape -%}{% include 'CypherCreate.dlq'-%}{% endMultilineStringEscape -%};

    public static string ToCypher({{schema.Title | ClassName}} instance, string cypherTemplate){
    	var json = JsonConvert.SerializeObject(instance);
    	return cypherTemplate.Replace("%_NODE_DATA_JSON_%", json);
    }

  {% ClassEnums -%}
  {% for prop in schema.IncludedProperties -%}
  [JsonProperty("{{prop.Key}}")]
    public {{prop.Value | FullClassName : prop.Key}} {{prop.Key | Capitalize}} { get; set; }

  {% endfor -%}  
  {% for prop in ClassEnums -%}
  	public enum {{prop.Key}} { 
  	  {% for enumVal in prop.Value.Enum -%}
  	  {% unless enumVal == 'null'-%}  {{enumVal}},  {% endunless -%}  
  	  {% endfor -%} }
  {% endfor -%}
  {% endClassEnums -%}
  }
}