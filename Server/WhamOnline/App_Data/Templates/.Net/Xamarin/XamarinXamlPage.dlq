{% assign csFileCodeBehind = table.TableName | ClassName | Append: 'Page.xaml.cs' -%}
{% assign csFileXaml = table.TableName | ClassName | Append: 'Page.xaml' -%}
<!-- XamarinXamlPage -->
{% File csFileCodeBehind -%}using System;
using System.Collections.Generic; 
using Xamarin.Forms;

namespace {{ mobileproject | CSName }}.Forms.UI
{
    // there shouldn't be anything else in this class with proper MVVM implementation
    public partial class {{ table.TableName | ClassName }}Page : ContentPage
    {
        public {{ table.TableName | ClassName }}Page ()
        {
            InitializeComponent ();
        }
    }
}{% endFile -%}
{% File csFileXaml -%}<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
    x:Class="{{ mobileproject | CSName }}.Forms.UI.{{ table.TableName | ClassName }}Page"
    Title="{Binding ViewHeading}">
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="{Binding EditCommandLabel}" Command="{Binding EditItemCommand}" CommandParameter="{Binding EditCommandLabel}"/> <!-- see Icon="edit.png" and Priority="1" for ordering multiple items -->
    </ContentPage.ToolbarItems>
    <ContentPage.Padding>
        <OnPlatform x:TypeArguments="Thickness">
            <OnPlatform.iOS>0, 20, 0, 0</OnPlatform.iOS>
        </OnPlatform>
    </ContentPage.Padding>
    <ContentPage.Content>  
		<ScrollView Orientation="Vertical">
            <Grid>
                <Grid.RowDefinitions> 
                    <RowDefinition Height="auto" />
                    {% for field in table.Fields -%}
                    <RowDefinition Height="42" />
    {% endfor %}
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                {% Trim %}
                {% assign gridRow = 1 %}
                {% for field in table.Fields %}
                <!-- Field: {{ field.Name }} Type:{{ field.Type }} Collection:{{ field.IsCollection }} UI: {{ field.UIType }} -->               
                {% if field.UIType != 'Hidden' and field.IsAuth != 'true' and field.Type != 'Ref' %}
                <Label Grid.Row="{{ gridRow }}" Text="{Binding {{ field.Name | CSName }} }" IsVisible="{Binding IsNotEditing}"/>              
                {% SingleLine %}
                    {% case field.Type %}
                        {% when 'string' %} 
                            <Entry Grid.Row="{{ gridRow }}" Text="{Binding {{ field.Name | CSName }} }" Placeholder="{{ field.Hint }}" IsVisible="{Binding IsEditing}"/>
                        {% when 'int' %} 
                            <Entry Grid.Row="{{ gridRow }}" Text="{Binding {{ field.Name  | CSName }} }"  Placeholder="{{ field.Hint }}" Keyboard="Numeric" IsVisible="{Binding IsEditing}"/>
                        {% when 'double' %} 
                            <Entry Grid.Row="{{ gridRow }}" Text="{Binding {{ field.Name  | CSName }} }"  Placeholder="{{ field.Hint }}" Keyboard="Numeric" IsVisible="{Binding IsEditing}"/>
                        {% when 'bool' %} 
                            <Switch Grid.Row="{{ gridRow }}" IsToggled="{Binding {{ field.Name  | CSName }} }" IsVisible="{Binding IsEditing}"/>
                        {% when 'DateTime' %} 
                            <DatePicker Grid.Row="{{ gridRow }}" Date="{Binding {{ field.Name | CSName  }} }" IsVisible="{Binding IsEditing}"/> <!-- change to TimePicker if needed -->
                        {% else %} << Unknown field type >>                     
                    {% endcase %}  
                    {% assign gridRow = gridRow | Add: '1' %}
                {% endSingleLine -%}
                {% endif -%}
                {% endfor -%}
                {% endTrim -%}
                
                {% Trim %} 
                {% for field in table.Fields %}
                {% SingleLine %}
                {% if field.UIType != 'Hidden' and field.Type == 'Ref' %}
                     <Button Grid.Row="{{ gridRow }}" IsEnabled="{Binding IsNotEditing}" Text="{% SingleLine NoSpace %}
                     {% if field.Label == '' or field.Label == nil %}
                     {{ field.Name | CSName }} >
                     {% else %}
                     {{ field.Label }}
                     {% endif %}{% endSingleLine %}" Command="{Binding NavigateTo{{ field.Name | CSName }}Command}" />                   
                    {% assign gridRow = gridRow | Add: '1' %}
                {% endif %} 
                {% endSingleLine %}
                {% endfor %}
                {% endTrim %}
            </Grid>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>{% endFile -%}