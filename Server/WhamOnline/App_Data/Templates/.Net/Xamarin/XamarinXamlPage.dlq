{% assign csFileCodeBehind = table.TableName | ClassName | Append: 'Page.xaml.cs' -%}
{% assign csFileXaml = table.TableName | ClassName | Append: 'Page.xaml' -%}
<!-- XamarinXamlPage -->
{% File csFileCodeBehind -%}using System;
using System.Collections.Generic; 
using Xamarin.Forms;

namespace {{ mobileproject | CSName }}.Forms.UI
{
    // there shouldn't be anything else in this class with proper MVVM implementation
    public partial class {{ table.TableName | ClassName }}Page : ContentPage
    {
        public {{ table.TableName | ClassName }}Page ()
        {
            InitializeComponent ();
        }
    }
}{% endFile -%}
{% File csFileXaml -%}<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
    x:Class="{{ mobileproject | CSName }}.Forms.UI.{{ table.TableName | ClassName }}Page"
    Title="{Binding ViewHeading}">
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="{Binding EditCommandLabel}" Command="{Binding EditItemCommand}" CommandParameter="{Binding EditCommandLabel}"/> <!-- see Icon="edit.png" and Priority="1" for ordering multiple items -->
    </ContentPage.ToolbarItems>
    <ContentPage.Padding>
        <OnPlatform x:TypeArguments="Thickness">
            <OnPlatform.iOS>0, 20, 0, 0</OnPlatform.iOS>
        </OnPlatform>
    </ContentPage.Padding>
    <ContentPage.Content>  
        <ScrollView Orientation="Vertical">
            <Grid Padding="4,0,0,4">
                <Grid.RowDefinitions>
                    {% AlignLines %}
                    <RowDefinition Height="auto" />
                    
                    {% for field in table.Fields %}
                        <RowDefinition Height="auto" />
                    {% endfor %}
                    
                    <RowDefinition Height="auto" />
                    {% endAlignLines %}
                </Grid.RowDefinitions> 
                {% assign gridRow = 1 %}
                {% AlignLines ~=4 %}
                {% for field in table.Fields %}
                <!-- Field: {{ field.Name }}, Label: {{ field.Label }}, Type:{{ field.Type }}, Collection:{{ field.IsCollection }}, UI: {{ field.UIType }}; {{ field.UIType }}; {{ field.IsAuth }}; {{ field.Type }}-->               
                {% if field.UIType != 'hidden' and field.IsAuth != 'true' and field.Type != 'Ref' %}  
                    {% assign ofst = nil %}
                    {% capture gridRowAttribute %} Grid.Row="{{ gridRow }}"{% endcapture %}
                  
                    {% if field.Label != '' and field.Label != nil %}  
                        {% assign ofst = '~' %}
                        <StackLayout{{ gridRowAttribute }} Orientation="Vertical" Spacing="2">
                        {{ofst}}<Label Text="{{ field.Label }}" Style="{DynamicResource ItemLabelStyle}" />
                        {% assign gridRowAttribute = nil %}    
                    {% endif %}      
                    
                    {% case field.Type %}
                        {% when 'string' %}                              
                    {{ofst}}<Entry{{ gridRowAttribute }} Text="{Binding {{ field.Name | CSName }} }" Placeholder="{{ field.Hint }}" IsEnabled="{Binding IsEditing}"/>
                        {% when 'int' %} 
                    {{ofst}}<Entry{{ gridRowAttribute }} Text="{Binding {{ field.Name  | CSName }} }"  Placeholder="{{ field.Hint }}" Keyboard="Numeric" IsEnabled="{Binding IsEditing}"/>
                        {% when 'double' %} 
                    {{ofst}}<Entry{{ gridRowAttribute }} Text="{Binding {{ field.Name  | CSName }} }"  Placeholder="{{ field.Hint }}" Keyboard="Numeric" IsEnabled="{Binding IsEditing}"/>
                        {% when 'bool' %}
                    {{ofst}}<Switch{{ gridRowAttribute }} IsToggled="{Binding {{ field.Name  | CSName }} }" IsEnabled="{Binding IsEditing}"/>
                        {% when 'DateTime' %} 
                    {{ofst}}<Entry{{ gridRowAttribute }} Text="{Binding {{ field.Name  | CSName }} }" Placeholder="{{ field.Hint }}" IsEnabled="false" IsVisible="{Binding IsNotEditing}"/>                       
                    {{ofst}}<DatePicker {{ gridRowAttribute }} Date="{Binding {{ field.Name | CSName  }} }" IsVisible="{Binding IsEditing}"/> <!-- change to TimePicker if needed -->
                        {% else %} << Unknown field type: {{ field.Type }} for field {{ field.Name }} >>                     
                    {% endcase %}  
                    
                    {% if ofst != nil %}</StackLayout>{% endif %}
                    
                    {% assign gridRow = gridRow | Add: '1' %} 
                    {% endif -%}
                {% endfor -%}
                {% endAlignLines %} 
                
                <!-- navigation buttons if any -->
                {% AlignLines %}
                {% for field in table.Fields %} 
                {% if field.UIType != 'Hidden' and field.Type == 'Ref' %}
                <Button Grid.Row="{{ gridRow }}" Text="{% SingleLine %}
                     {% if field.Label == '' or field.Label == nil %}
                     {{ field.Name }} >
                     {% else %}
                     {{ field.Label }}
                     {% endif %}{% endSingleLine %}" Command="{Binding NavigateTo{{ field.Name | CSName }}Command}" />                   
                    {% assign gridRow = gridRow | Add: '1' %}
                {% endif %}  
                {% endfor %}
                {% endAlignLines %}
            </Grid>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>{% endFile -%}