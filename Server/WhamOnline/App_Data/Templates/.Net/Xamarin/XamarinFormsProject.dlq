<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{{ mobileFormsProjectGuid | Braces }}</ProjectGuid>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <UseMSBuildEngine>true</UseMSBuildEngine>
    <OutputType>Library</OutputType>
    <RootNamespace>{{ mobileproject | CSName }}.Forms</RootNamespace>
    <AssemblyName>{{ mobileproject | CSName }}.Forms</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <TargetFrameworkProfile>Profile78</TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug</OutputPath>
    <DefineConstants>DEBUG;</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <Optimize>true</Optimize>
    <OutputPath>bin\Release</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
  </PropertyGroup> 
  <ItemGroup>
    <None Include="packages.config" />{% File 'packages.config' %}<?xml version="1.0" encoding="utf-8"?>
 <packages>
    <package id="ExifLib.PCL" version="1.0.1" targetFramework="portable45-net45+win8+wp8" />
    <package id="Microsoft.Azure.Mobile.Client" version="2.0.1" targetFramework="portable45-net45+win8+wp8" />
    <package id="Microsoft.Azure.Mobile.Client.SQLiteStore" version="2.0.1" targetFramework="portable45-net45+win8+wp8" />
    <package id="Microsoft.Bcl" version="1.1.10" targetFramework="portable45-net45+win8+wp8" />
    <package id="Microsoft.Bcl.Build" version="1.0.21" targetFramework="portable45-net45+win8+wp8" />
    <package id="Microsoft.Net.Http" version="2.2.29" targetFramework="portable45-net45+win8+wp8" />
    <package id="modernhttpclient" version="2.4.2" targetFramework="portable45-net45+win8+wp8" />
    <package id="Newtonsoft.Json" version="9.0.1" targetFramework="portable45-net45+win8+wp8" />
    <package id="SQLitePCL" version="3.8.7.2" targetFramework="portable45-net45+win8+wp8" />
    <package id="Xam.Plugin.Media" version="2.4.0-beta3" targetFramework="portable45-net45+win8+wp8" />
    <package id="Xamarin.Forms" version="2.3.0.46-pre3" targetFramework="portable45-net45+win8+wp8" />
    <package id="Xamarin.Forms.Pages" version="2.3.0.46-pre3" targetFramework="portable45-net45+win8+wp8" />
    <package id="Xamarin.Forms.Pages.Azure" version="2.3.0.46-pre3" targetFramework="portable45-net45+win8+wp8" />
    <package id="XLabs.Core" version="2.2.0-pre04" targetFramework="portable45-net45+win8+wp8" />
    <package id="XLabs.Forms" version="2.2.0-pre04" targetFramework="portable45-net45+win8+wp8" />
    <package id="XLabs.IoC" version="2.2.0-pre04" targetFramework="portable45-net45+win8+wp8" />
    <package id="XLabs.Platform" version="2.2.0-pre04" targetFramework="portable45-net45+win8+wp8" />
    <package id="XLabs.Serialization" version="2.2.0-pre04" targetFramework="portable45-net45+win8+wp8" />
</packages>{% endFile %}
  </ItemGroup>
  <ItemGroup>
    <Compile Include="AssemblyInfo.cs" />{% File 'AssemblyInfo.cs' %}{% include 'AssemblyInfo.dlq' %}{% endFile %}
    {% if appGen.Database.Type != '' -%}
    <Compile Include="Services\ApiClient.cs" />
    {% Folder 'Services' -%}
    {% File 'ApiClient.cs' %}{% include 'XamarinApiClient.dlq' %}{% endFile %}
    {% endFolder %}{% endif %}
    <Compile Include="Services\IFileService.cs" />
    {% Folder 'Services' -%}
    {% File 'IFileService.cs' %}using System;

namespace {{ mobileproject | CSName }}.Forms.Services
{
    // a sample service
    public interface IFileService
    {
        void Save<T> (T saveObject, string fileName, bool isPrivate = true) where T : class, new();
        T Load<T> (string fileName, bool isPrivate = true) where T : class, new();
    }
}
    {% endFile -%}
    {% endFolder -%}
  </ItemGroup>
  <ItemGroup>
      <EmbeddedResource Include="App.xaml">
        <Generator>MSBuild:UpdateDesignTimeXaml</Generator>
      </EmbeddedResource>
{% File 'App.xaml' %}<?xml version="1.0" encoding="UTF-8"?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
              xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
              x:Class="{{ mobileproject | CSName }}.App">
  <Application.Resources>
    <ResourceDictionary> 
        <Style x:Key="ItemLabelStyle" TargetType="Label">
            <Setter Property="TextColor" Value="Gray"/>
            <Setter Property="FontSize" Value="8"/>
        </Style> 
    </ResourceDictionary>
  </Application.Resources>
</Application>{% endFile %}
    </ItemGroup>
    <ItemGroup>
    <Compile Include="App.xaml.cs">
      <DependentUpon>App.xaml</DependentUpon>
    </Compile>
{% File 'App.xaml.cs' -%}
using System;
using System.Collections.Generic;
using Xamarin.Forms;
using XLabs.Forms.Mvvm;
using XLabs.Ioc;

using {{ mobileproject | CSName }}.Forms;
using {{ mobileproject | CSName }}.Forms.UI;
using {{ mobileproject | CSName }}.Forms.ViewModels;
using {{ mobileproject | CSName }}.Forms.Services;
using {{ mobileproject | CSName }}.Models;
  

namespace {{ mobileproject | CSName }}
{
  public partial class App : Application
  {
    public App ()
    {
        try{ 
{% for table in appGen.DataModel %}
            ViewFactory.Register<{{ table.TableName | ClassName }}Page, {{ table.TableName | ClassName }}ViewModel>();
            ViewFactory.Register<CollectionPage, {{ table.TableName | ClassName }}CollectionViewModel>();
{% endfor -%}

{% assign mainPageName = appGen.DataModel[0].TableName | ClassName %}
            //TODO: with Auth the main page will be a modal Login page and the root model will be loaded from there
          
            // sample service use
            var fileService = Resolver.Resolve<IFileService> ();
            bool isNew = true;
            {{ mainPageName  }} mainItem = null;
            
            try{
                mainItem = fileService?.Load<{{ mainPageName  }}> ("{{ mainPageName  }}.json");
            } catch (Exception loadException){
                // a mobile app should make best effort to start, anything but fatal errors should be logged and ignored
                // messages output with Debug.WriteLine are visible not only in the debugger but also by attaching monitoring to the device
                System.Diagnostics.Debug.WriteLine ("{% Debrix %} Unable to load app data: " + loadException);
            }
            
            if (mainItem != null) {
                isNew = false;
            } else {
                mainItem = new {{ mainPageName  }} ();
            }

            var mainInnerPage = ViewFactory.CreatePage<{{ mainPageName }}ViewModel, Page> ((viewModel, page) => {
                viewModel.Load (mainItem);
                viewModel.IsEditing = isNew;
                viewModel.StatusChangingCallback = ({{ mainPageName  }} cSave, bool isSaving) => {
                    if (isSaving) { 
                        try{
                            fileService?.Save (cSave, "{{ mainPageName  }}.json");
                        } catch (Exception loadException){
                            System.Diagnostics.Debug.WriteLine ("{% Debrix %} Unable to save app data: " + loadException);
                        }
                    }
                };
            }, new object [0]) as Page;
                
            MainPage = new NavigationPage (mainInnerPage); 
        } catch (Exception x) {
            // since these are fatal errors the app will have to crash.
            // it's still a good idea to try and output a meaningful log message before crashing
            // if a monitoring service is used all exceptions should be logged there too, even if known and ignored
            var xamlInner = x.InnerException as Xamarin.Forms.Xaml.XamlParseException; 
            if (xamlInner!=null){
                System.Diagnostics.Debug.WriteLine ("{% Debrix %} Fatal Error in XAML for {{ appGen.DataModel[0].TableName | ClassName }}Page: " + xamlInner);
            } else {
                System.Diagnostics.Debug.WriteLine ("{% Debrix %} Unable to start application: " + x);
            }
            
            throw;
        }
    }

    protected override void OnStart ()
    {
       // Handle when your app starts up
    }

    protected override void OnSleep ()
    {
        // Handle when your app sleeps
    }

    protected override void OnResume ()
    {
      // Handle when your app resumes
    }
  }
}{% endFile %}
  </ItemGroup>
    <ItemGroup>
    <Compile Include="ViewModels\BaseViewModel.cs" />
    <Compile Include="ViewModels\CollectionViewModel.cs" />  
    <Compile Include="UI\CollectionPage.xaml.cs">
      <DependentUpon>CollectionPage.xaml</DependentUpon>
    </Compile>
    <EmbeddedResource Include="UI\CollectionPage.xaml">
      <Generator>MSBuild:UpdateDesignTimeXaml</Generator>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    {% include 'XamarinXamlPageCollection.dlq' -%} 
  </ItemGroup>
  {% for table in appGen.DataModel -%}
  {% assign csFileViewModel = table.TableName | ClassName | Append: 'ViewModel.cs' -%}
  {% Folder 'UI' %}{% include 'XamarinXamlPage.dlq' %}{% endFolder -%}
  {% Folder 'ViewModels' %}{% include 'xamarin.ViewModelCS.dlq' %}{% endFolder -%}
  <ItemGroup>
    <Compile Include="UI\{{ table.TableName | ClassName }}Page.xaml.cs">
      <DependentUpon>{{ table.TableName | ClassName }}Page.xaml</DependentUpon>
    </Compile>
    <Compile Include="ViewModels\{{ table.TableName | ClassName }}ViewModel.cs" /> 
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="UI\{{ table.TableName | ClassName }}Page.xaml">
      <Generator>MSBuild:UpdateDesignTimeXaml</Generator>
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>
{% endfor %}
  <ItemGroup>
    <Reference Include="System.Net.Http">
      <HintPath>..\packages\Microsoft.Net.Http.2.2.29\lib\portable-net40+sl4+win8+wp71+wpa81\System.Net.Http.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http.Extensions">
      <HintPath>..\packages\Microsoft.Net.Http.2.2.29\lib\portable-net40+sl4+win8+wp71+wpa81\System.Net.Http.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http.Primitives">
      <HintPath>..\packages\Microsoft.Net.Http.2.2.29\lib\portable-net40+sl4+win8+wp71+wpa81\System.Net.Http.Primitives.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.WindowsAzure.Mobile">
      <HintPath>..\packages\Microsoft.Azure.Mobile.Client.2.0.1\lib\portable-win+net45+wp8+wpa81+monotouch+monoandroid\Microsoft.WindowsAzure.Mobile.dll</HintPath>
    </Reference>
    <Reference Include="ExifLib">
      <HintPath>..\packages\ExifLib.PCL.1.0.1\lib\portable-net45+sl50+win+WindowsPhoneApp81+wp80+Xamarin.iOS10+MonoAndroid10+MonoTouch10\ExifLib.dll</HintPath>
    </Reference>
    <Reference Include="ModernHttpClient">
      <HintPath>..\packages\modernhttpclient.2.4.2\lib\Portable-Net45+WinRT45+WP8+WPA81\ModernHttpClient.dll</HintPath>
    </Reference>
    <Reference Include="SQLitePCL">
      <HintPath>..\packages\SQLitePCL.3.8.7.2\lib\portable-net45+sl50+win+wpa81+wp80+MonoAndroid10+xamarinios10+MonoTouch10\SQLitePCL.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.WindowsAzure.Mobile.SQLiteStore">
      <HintPath>..\packages\Microsoft.Azure.Mobile.Client.SQLiteStore.2.0.1\lib\portable-win+net45+wp8+wpa81+monotouch+monoandroid\Microsoft.WindowsAzure.Mobile.SQLiteStore.dll</HintPath>
    </Reference>
    <Reference Include="Plugin.Media.Abstractions">
      <HintPath>..\packages\Xam.Plugin.Media.2.4.0-beta3\lib\portable-net45+wp8+wpa81+win8+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Plugin.Media.Abstractions.dll</HintPath>
    </Reference>
    <Reference Include="Plugin.Media">
      <HintPath>..\packages\Xam.Plugin.Media.2.4.0-beta3\lib\portable-net45+wp8+wpa81+win8+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Plugin.Media.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>..\packages\Newtonsoft.Json.9.0.1\lib\portable-net45+wp80+win8+wpa81\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="Xamarin.Forms.Core">
      <HintPath>..\packages\Xamarin.Forms.2.3.0.46-pre3\lib\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.Core.dll</HintPath>
    </Reference>
    <Reference Include="Xamarin.Forms.Platform">
      <HintPath>..\packages\Xamarin.Forms.2.3.0.46-pre3\lib\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.Platform.dll</HintPath>
    </Reference>
    <Reference Include="Xamarin.Forms.Xaml">
      <HintPath>..\packages\Xamarin.Forms.2.3.0.46-pre3\lib\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.Xaml.dll</HintPath>
    </Reference>
    <Reference Include="Xamarin.Forms.Pages">
      <HintPath>..\packages\Xamarin.Forms.Pages.2.3.0.46-pre3\lib\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.Pages.dll</HintPath>
    </Reference>
    <Reference Include="Xamarin.Forms.Pages.Azure">
      <HintPath>..\packages\Xamarin.Forms.Pages.Azure.2.3.0.46-pre3\lib\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.Pages.Azure.dll</HintPath>
    </Reference> 
    <Reference Include="XLabs.IOC">
      <HintPath>..\packages\XLabs.IoC.2.2.0-pre04\lib\portable-net45+netcore45+wpa81+wp8+monoandroid+monotouch+xamarinios10+xamarinmac\XLabs.IOC.dll</HintPath>
    </Reference>
    <Reference Include="XLabs.Serialization">
      <HintPath>..\packages\XLabs.Serialization.2.2.0-pre04\lib\portable-net45+netcore45+wpa81+wp8+monoandroid+monotouch+xamarinios10+xamarinmac\XLabs.Serialization.dll</HintPath>
    </Reference>
    <Reference Include="XLabs.Core">
      <HintPath>..\packages\XLabs.Core.2.2.0-pre04\lib\portable-net45+netcore45+wpa81+wp8+monoandroid+monotouch+xamarinios10+xamarinmac\XLabs.Core.dll</HintPath>
    </Reference>
    <Reference Include="XLabs.Platform">
      <HintPath>..\packages\XLabs.Platform.2.2.0-pre04\lib\portable-netcore451+wpa81+wp8+monoandroid+monotouch+xamarinios10+xamarinmac\XLabs.Platform.dll</HintPath>
    </Reference>
    <Reference Include="XLabs.Forms">
      <HintPath>..\packages\XLabs.Forms.2.2.0-pre04\lib\portable-netcore451+wpa81+wp81+monoandroid+monotouch+xamarinios10+xamarinmac\XLabs.Forms.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="UI\" />
    <Folder Include="Services\" />
    <Folder Include="ViewModels\" />
  </ItemGroup> 
  <ItemGroup>
    <ProjectReference Include="..\Models\{{ xamarinModelsProjectFile }}">
      <Project>{{ mobileModelsProjectGuid | Braces }}</Project>
      <Name>{{ mobileproject | CSName }}.Models</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <Import Project="..\packages\Xamarin.Forms.2.2.0.31\build\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.targets" Condition="Exists('..\packages\Xamarin.Forms.2.2.0.31\build\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.targets')" />
  <Import Project="..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets" Condition="Exists('..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets')" />
  <Import Project="..\packages\Xamarin.Forms.2.3.0.46-pre3\build\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.targets" Condition="Exists('..\packages\Xamarin.Forms.2.3.0.46-pre3\build\portable-win+net45+wp80+win81+wpa81+MonoAndroid10+MonoTouch10+Xamarin.iOS10\Xamarin.Forms.targets')" />
</Project>